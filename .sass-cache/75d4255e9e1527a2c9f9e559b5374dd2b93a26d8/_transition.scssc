3.2.10 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:
@linei:@options{ :@children[o:Sass::Tree::ImportNode;0;i;	@;
[ :@imported_file0:@imported_filename"sharedo:Sass::Tree::CommentNode
;i;	@:
@type:silent;
[ :@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */o:Sass::Tree::VariableNode;i;	@;
[ :
@name" default-transition-property:@guarded"!default:
@expro:Sass::Script::String	;i;	@;:identifier;"allo;;i;	@;
[ ;" default-transition-duration;"!default;o:Sass::Script::Number;i;	@:@denominator_units[ :@numerator_units["s:@original"1s;io;;i;	@;
[ ;" default-transition-function;"!default;o:Sass::Script::Bool;i;	@;Fo;;i;	@;
[ ;"default-transition-delay;"!default;o;;i;	@;Fo;;i;	@;
[ ;"#transitionable-prefixed-values;"!default;o:Sass::Script::List	:@separator:
comma;i;	@;[o;	;i;	@;;;"transformo;	;i;	@;;;"transform-origino;
;i!;	@;;;
[ ;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */o:Sass::Tree::MixinDefNode;T;i0;	@;
[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operator:eq:
@linei1:@operand1o:Sass::Script::Funcall;i1:@options{ :@splat0:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;i1;@:@underscored_name"property_1;"property-1;@:@operand2o:Sass::Script::String	;i1;@:
@type:identifier:@value"string0[o:Sass::Tree::VariableNode;i1;@:@children[ ;"property-1:@guarded0:
@expro;
;i1;@;0;"unquote;{ ;[o;	;i1;@;"property_1;"property-1o;;i2;	@;
[ ;"properties;0;o:Sass::Script::Funcall;i2;	@:@splat0;"compact:@keywords{ :
@args[o:Sass::Script::Variable	;i2;	@:@underscored_name"property_1;"property-1o;&	;i2;	@;'"property_2;"property-2o;&	;i2;	@;'"property_3;"property-3o;&	;i2;	@;'"property_4;"property-4o;&	;i2;	@;'"property_5;"property-5o;&	;i2;	@;'"property_6;"property-6o;&	;i2;	@;'"property_7;"property-7o;&	;i2;	@;'"property_8;"property-8o;&	;i2;	@;'"property_9;"property-9o;&	;i2;	@;'"property_10;"property-10u;!Å[o:Sass::Script::Variable	:
@linei3:@options{ :@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode;i3:@prop_syntax:new;@:
@tabsi :@children[ ;	[" -webkit-transition-property:@valueo:Sass::Script::Funcall;i3;@:@splat0;	"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;i3;@:
@type:identifier;"-webkito; 	;i3;@;"properties;	"propertiesu;!Á[o:Sass::Script::Variable	:
@linei4:@options{ :@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode;i4:@prop_syntax:new;@:
@tabsi :@children[ ;	["-moz-transition-property:@valueo:Sass::Script::Funcall;i4;@:@splat0;	"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;i4;@:
@type:identifier;"	-mozo; 	;i4;@;"properties;	"propertiesu;!¹[o:Sass::Script::Variable	:
@linei5:@options{ :@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode;i5:@prop_syntax:new;@:
@tabsi :@children[ ;	["-o-transition-property:@valueo:Sass::Script::Funcall;i5;@:@splat0;	"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;i5;@:
@type:identifier;"-oo; 	;i5;@;"properties;	"propertieso:Sass::Tree::PropNode;i6:@prop_syntax:new;	@:
@tabsi ;
[ ;["transition-property;o;&	;i6;	@;'"properties;"properties;#0;"transition-property;%[[o;&;	@;'"property_1;"property-1o;&	;i&;	@;'" default_transition_property;" default-transition-property[o;&;	@;'"property_2;"property-2o;;i';	@;F[o;&;	@;'"property_3;"property-3o;;i(;	@;F[o;&;	@;'"property_4;"property-4o;;i);	@;F[o;&;	@;'"property_5;"property-5o;;i*;	@;F[o;&;	@;'"property_6;"property-6o;;i+;	@;F[o;&;	@;'"property_7;"property-7o;;i,;	@;F[o;&;	@;'"property_8;"property-8o;;i-;	@;F[o;&;	@;'"property_9;"property-9o;;i.;	@;F[o;&;	@;'"property_10;"property-10o;;i/;	@;Fo;
;i9;	@;;;
[ ;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */o; ;T;iH;	@;
[u;!Ù[o:Sass::Script::Operation
:@operator:eq:
@lineiI:@operand1o:Sass::Script::Funcall;iI:@options{ :@splat0:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;iI;@:@underscored_name"duration_1;"duration-1;@:@operand2o:Sass::Script::String	;iI;@:
@type:identifier:@value"string0[o:Sass::Tree::VariableNode;iI;@:@children[ ;"duration-1:@guarded0:
@expro;
;iI;@;0;"unquote;{ ;[o;	;iI;@;"duration_1;"duration-1o;;iJ;	@;
[ ;"durations;0;o;";iJ;	@;#0;"compact;${ ;%[o;&	;iJ;	@;'"duration_1;"duration-1o;&	;iJ;	@;'"duration_2;"duration-2o;&	;iJ;	@;'"duration_3;"duration-3o;&	;iJ;	@;'"duration_4;"duration-4o;&	;iJ;	@;'"duration_5;"duration-5o;&	;iJ;	@;'"duration_6;"duration-6o;&	;iJ;	@;'"duration_7;"duration-7o;&	;iJ;	@;'"duration_8;"duration-8o;&	;iJ;	@;'"duration_9;"duration-9o;&	;iJ;	@;'"duration_10;"duration-10o:Sass::Tree::MixinNode;iM;	@;
[ ;#0;"experimental;${ ;%[o;	;iK;	@;;;"transition-durationo;&	;iK;	@;'"durations;"durationso;	;iL;	@;;;"	-mozo;	;iL;	@;;;"-webkito;	;iL;	@;;;"-oo:!Sass::Script::UnaryOperation	:@operator:not;iL;	@:@operando;	;iL;	@;;;"-mso;-	;.;/;iL;	@;0o;	;iL;	@;;;"-khtmlo;	;iL;	@;;;"official;#0;"transition-duration;%[[o;&;	@;'"duration_1;"duration-1o;&	;i>;	@;'" default_transition_duration;" default-transition-duration[o;&;	@;'"duration_2;"duration-2o;;i?;	@;F[o;&;	@;'"duration_3;"duration-3o;;i@;	@;F[o;&;	@;'"duration_4;"duration-4o;;iA;	@;F[o;&;	@;'"duration_5;"duration-5o;;iB;	@;F[o;&;	@;'"duration_6;"duration-6o;;iC;	@;F[o;&;	@;'"duration_7;"duration-7o;;iD;	@;F[o;&;	@;'"duration_8;"duration-8o;;iE;	@;F[o;&;	@;'"duration_9;"duration-9o;;iF;	@;F[o;&;	@;'"duration_10;"duration-10o;;iG;	@;Fo;
;iP;	@;;;
[ ;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */o; ;T;i`;	@;
[o;;ia;	@;
[ ;"function-1;0;o;";ia;	@;#0;"unquote;${ ;%[o;&	;ia;	@;'"function_1;"function-1o;;ib;	@;
[ ;"functions;0;o;";ib;	@;#0;"compact;${ ;%[o;&	;ib;	@;'"function_1;"function-1o;&	;ib;	@;'"function_2;"function-2o;&	;ib;	@;'"function_3;"function-3o;&	;ib;	@;'"function_4;"function-4o;&	;ib;	@;'"function_5;"function-5o;&	;ib;	@;'"function_6;"function-6o;&	;ib;	@;'"function_7;"function-7o;&	;ib;	@;'"function_8;"function-8o;&	;ib;	@;'"function_9;"function-9o;&	;ib;	@;'"function_10;"function-10o;,;ie;	@;
[ ;#0;"experimental;${ ;%[o;	;ic;	@;;;"transition-timing-functiono;&	;ic;	@;'"functions;"functionso;	;id;	@;;;"	-mozo;	;id;	@;;;"-webkito;	;id;	@;;;"-oo;-	;.;/;id;	@;0o;	;id;	@;;;"-mso;-	;.;/;id;	@;0o;	;id;	@;;;"-khtmlo;	;id;	@;;;"official;#0;"transition-timing-function;%[[o;&;	@;'"function_1;"function-1o;&	;iV;	@;'" default_transition_function;" default-transition-function[o;&;	@;'"function_2;"function-2o;;iW;	@;F[o;&;	@;'"function_3;"function-3o;;iX;	@;F[o;&;	@;'"function_4;"function-4o;;iY;	@;F[o;&;	@;'"function_5;"function-5o;;iZ;	@;F[o;&;	@;'"function_6;"function-6o;;i[;	@;F[o;&;	@;'"function_7;"function-7o;;i\;	@;F[o;&;	@;'"function_8;"function-8o;;i];	@;F[o;&;	@;'"function_9;"function-9o;;i^;	@;F[o;&;	@;'"function_10;"function-10o;;i_;	@;Fo;
;ih;	@;;;
[ ;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */o; ;T;iw;	@;
[u;!Ê[o:Sass::Script::Operation
:@operator:eq:
@lineix:@operand1o:Sass::Script::Funcall;ix:@options{ :@splat0:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;ix;@:@underscored_name"delay_1;"delay-1;@:@operand2o:Sass::Script::String	;ix;@:
@type:identifier:@value"string0[o:Sass::Tree::VariableNode;ix;@:@children[ ;"delay-1:@guarded0:
@expro;
;ix;@;0;"unquote;{ ;[o;	;ix;@;"delay_1;"delay-1o;;iy;	@;
[ ;"delays;0;o;";iy;	@;#0;"compact;${ ;%[o;&	;iy;	@;'"delay_1;"delay-1o;&	;iy;	@;'"delay_2;"delay-2o;&	;iy;	@;'"delay_3;"delay-3o;&	;iy;	@;'"delay_4;"delay-4o;&	;iy;	@;'"delay_5;"delay-5o;&	;iy;	@;'"delay_6;"delay-6o;&	;iy;	@;'"delay_7;"delay-7o;&	;iy;	@;'"delay_8;"delay-8o;&	;iy;	@;'"delay_9;"delay-9o;&	;iy;	@;'"delay_10;"delay-10o;,;i|;	@;
[ ;#0;"experimental;${ ;%[o;	;iz;	@;;;"transition-delayo;&	;iz;	@;'"delays;"delayso;	;i{;	@;;;"	-mozo;	;i{;	@;;;"-webkito;	;i{;	@;;;"-oo;-	;.;/;i{;	@;0o;	;i{;	@;;;"-mso;-	;.;/;i{;	@;0o;	;i{;	@;;;"-khtmlo;	;i{;	@;;;"official;#0;"transition-delay;%[[o;&;	@;'"delay_1;"delay-1o;&	;im;	@;'"default_transition_delay;"default-transition-delay[o;&;	@;'"delay_2;"delay-2o;;in;	@;F[o;&;	@;'"delay_3;"delay-3o;;io;	@;F[o;&;	@;'"delay_4;"delay-4o;;ip;	@;F[o;&;	@;'"delay_5;"delay-5o;;iq;	@;F[o;&;	@;'"delay_6;"delay-6o;;ir;	@;F[o;&;	@;'"delay_7;"delay-7o;;is;	@;F[o;&;	@;'"delay_8;"delay-8o;;it;	@;F[o;&;	@;'"delay_9;"delay-9o;;iu;	@;F[o;&;	@;'"delay_10;"delay-10o;;iv;	@;Fo;
;i;	@;;;
[ ;["*/* Transition all-in-one shorthand */o; ;T;i;	@;
[o;,;i;	@;
[ ;#0;"transition;${ ;%[o;";i;	@;#0;"compact;${ ;%[o;	;:
space;i;	@;[	o;&	;i;	@;'"property;"propertyo;&	;i;	@;'"duration;"durationo;&	;i;	@;'"function;"functiono;&	;i;	@;'"
delay;"
delay;#0;"single-transition;%[	[o;&;	@;'"property;"propertyo;&	;i};	@;'" default_transition_property;" default-transition-property[o;&;	@;'"duration;"durationo;&	;i~;	@;'" default_transition_duration;" default-transition-duration[o;&;	@;'"function;"functiono;&	;i;	@;'" default_transition_function;" default-transition-function[o;&;	@;'"
delay;"
delayo;&	;i;	@;'"default_transition_delay;"default-transition-delayo; ;T;i;	@;
[u;!÷[o:Sass::Script::Operation
:@operator:eq:
@linei:@operand1o:Sass::Script::Variable	;i:@options{ :@underscored_name"transition_1:
@name"transition-1;@:@operand2o:Sass::Script::String	;i;@:
@type:identifier:@value"default0[o:Sass::Tree::VariableNode;i;@:@children[ ;"transition-1:@guarded0:
@expro:Sass::Script::Funcall;i;@:@splat0;"compact:@keywords{ :
@args[o:Sass::Script::List	:@separator:
space;i;@;[	o;
	;i;@;" default_transition_property;" default-transition-propertyo;
	;i;@;" default_transition_duration;" default-transition-durationo;
	;i;@;" default_transition_function;" default-transition-functiono;
	;i;@;"default_transition_delay;"default-transition-delayo;;i;	@;
[ ;"transitions;0;o;;i;	@;Fu;![o:Sass::Script::Operation
:@operator:and:
@linei:@operand1o; 
;:eq;i;	o:Sass::Script::Funcall;i:@options{ :@splat0:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;i;@	:@underscored_name"transition_1;"transition-1;@	:@operand2o:Sass::Script::String	;i;@	:
@type:identifier:@value"	list;@	;o; 
;;
;i;	o;;i;@	;0;"type-of;{ ;[o;;i;@	;0;"nth;{ ;[o;	;i;@	;"transition_1;"transition-1o:Sass::Script::Number;i;@	:@denominator_units[ :@numerator_units[ :@original"1;i;@	;o;	;i;@	;;;"	listu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:
@linei:@options{ :@children[ :
@name"transitions:@guarded0:
@expro:Sass::Script::Funcall;i;@:@splat0;	"compact:@keywords{ :
@args[o:Sass::Script::Variable	;i;@:@underscored_name"transition_1;	"transition-1o;	;i;@;"transition_2;	"transition-2o;	;i;@;"transition_3;	"transition-3o;	;i;@;"transition_4;	"transition-4o;	;i;@;"transition_5;	"transition-5o;	;i;@;"transition_6;	"transition-6o;	;i;@;"transition_7;	"transition-7o;	;i;@;"transition_8;	"transition-8o;	;i;@;"transition_9;	"transition-9o;	;i;@;"transition_10;	"transition-10[o:Sass::Tree::VariableNode;i;@	:@children[ ;"transitions:@guarded0:
@expro;;i;@	;0;"	join;{ ;[o;	;i;@	;"transition_1;"transition-1o;;i;@	;0;"compact;{ ;[o;	;i;@	;"transition_2;"transition-2o;	;i;@	;"transition_3;"transition-3o;	;i;@	;"transition_4;"transition-4o;	;i;@	;"transition_5;"transition-5o;	;i;@	;"transition_6;"transition-6o;	;i;@	;"transition_7;"transition-7o;	;i;@	;"transition_8;"transition-8o;	;i;@	;"transition_9;"transition-9o;	;i;@	;"transition_10;"transition-10o;	;i;@	;;;"
commao;;i;	@;
[ ;"delays;0;o;";i;	@;#0;"comma-list;${ ;%[ o;;i;	@;
[ ;"has-delays;0;o;;i;	@;Fo;;i;	@;
[ ;"webkit-value;0;o;";i;	@;#0;"comma-list;${ ;%[ o;;i;	@;
[ ;"moz-value;0;o;";i;	@;#0;"comma-list;${ ;%[ o;;i;	@;
[ ;"o-value;0;o;";i;	@;#0;"comma-list;${ ;%[ o;
;i ;	@;;;
[ ;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */o:Sass::Tree::EachNode;T;i¢;	@:	@var"transition;
[o;
;i£;	@;;;
[ ;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */o;;i¥;	@;
[ ;"property;0;o;";i¥;	@;#0;"nth;${ ;%[o;&	;i¥;	@;'"transition;"transitiono;;i¥;	@;[ ;[ ;"1;io;;i¦;	@;
[ ;"duration;0;o;;i¦;	@;Fo;;i§;	@;
[ ;"timing-function;0;o;;i§;	@;Fo;;i¨;	@;
[ ;"
delay;0;o;;i¨;	@;Fu;![o:Sass::Script::Operation
:@operator:gt:
@linei©:@operand1o:Sass::Script::Funcall;i©:@options{ :@splat0:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;i©;@:@underscored_name"transition;"transition;@:@operand2o:Sass::Script::Number;i©;@:@denominator_units[ :@numerator_units[ :@original"1:@valuei0[o:Sass::Tree::VariableNode;i©;@:@children[ ;"duration:@guarded0:
@expro;
;i©;@;0;"nth;{ ;[o;	;i©;@;"transition;"transitiono;;i©;@;@;[ ;"2;iu;![o:Sass::Script::Operation
:@operator:gt:
@lineiª:@operand1o:Sass::Script::Funcall;iª:@options{ :@splat0:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;iª;@:@underscored_name"transition;"transition;@:@operand2o:Sass::Script::Number;iª;@:@denominator_units[ :@numerator_units[ :@original"2:@valuei0[o:Sass::Tree::VariableNode;iª;@:@children[ ;"timing-function:@guarded0:
@expro;
;iª;@;0;"nth;{ ;[o;	;iª;@;"transition;"transitiono;;iª;@;@;[ ;"3;iu;!Y[o:Sass::Script::Operation
:@operator:gt:
@linei«:@operand1o:Sass::Script::Funcall;i«:@options{ :@splat0:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;i«;@:@underscored_name"transition;"transition;@:@operand2o:Sass::Script::Number;i«;@:@denominator_units[ :@numerator_units[ :@original"3:@valuei0[o:Sass::Tree::VariableNode;i«;@:@children[ ;"
delay:@guarded0:
@expro;
;i«;@;0;"nth;{ ;[o;	;i«;@;"transition;"transitiono;;i«;@;@;[ ;"4;i	o;;i«;@;[ ;"has-delays;0;o:Sass::Script::Bool;i«;@;To;
;i­;	@;;;
[ ;[";/* If a delay is provided without a timing function */u;!g[o:Sass::Script::Operation
:@operator:and:
@linei®:@operand1o:Sass::Script::Funcall;i®:@options{ :@splat0:
@name"is-time:@keywords{ :
@args[o:Sass::Script::Variable	;i®;@:@underscored_name"timing_function;"timing-function;@:@operand2o:!Sass::Script::UnaryOperation	;:not;i®;@:@operando;	;i®;@;"
delay;"
delay0[o:Sass::Tree::VariableNode;i®;@:@children[ ;"
delay:@guarded0:
@expro;	;i®;@;"timing_function;"timing-functiono;;i®;@;[ ;"timing-function;0;o:Sass::Script::Bool;i®;@:@valueFo;;i®;@;[ ;"has-delays;0;o;;i®;@;To;
;i°;	@;;;
[ ;["9/* Keep a list of delays in case one is specified */o;;i±;	@;
[ ;"delays;0;o;";i±;	@;#0;"append;${ ;%[o;&	;i±;	@;'"delays;"delayso;";i±;	@;#0;"if;${ ;%[o;&	;i±;	@;'"
delay;"
delayo;&	;i±;	@;'"
delay;"
delayo;;i±;	@;[ ;["s;"0s;i o;;i³;	@;
[ ;"webkit-value;0;o;";i³;	@;#0;"append;${ ;%[o;&	;i³;	@;'"webkit_value;"webkit-valueo;";i³;	@;#0;"compact;${ ;%[o;	;;1;i³;	@;[o;";i³;	@;#0;"prefixed-for-transition;${ ;%[o;	;i³;	@;;;"-webkito;&	;i³;	@;'"property;"propertyo;&	;i³;	@;'"duration;"durationo;&	;i³;	@;'"timing_function;"timing-functiono;;i´;	@;
[ ;"moz-value;0;o;";i´;	@;#0;"append;${ ;%[o;&	;i´;	@;'"moz_value;"moz-valueo;";i´;	@;#0;"compact;${ ;%[o;	;;1;i´;	@;[	o;";i´;	@;#0;"prefixed-for-transition;${ ;%[o;	;i´;	@;;;"	-mozo;&	;i´;	@;'"property;"propertyo;&	;i´;	@;'"duration;"durationo;&	;i´;	@;'"timing_function;"timing-functiono;&	;i´;	@;'"
delay;"
delayo;;iµ;	@;
[ ;"o-value;0;o;";iµ;	@;#0;"append;${ ;%[o;&	;iµ;	@;'"o_value;"o-valueo;";iµ;	@;#0;"compact;${ ;%[o;	;;1;iµ;	@;[	o;";iµ;	@;#0;"prefixed-for-transition;${ ;%[o;	;iµ;	@;;;"-oo;&	;iµ;	@;'"property;"propertyo;&	;iµ;	@;'"duration;"durationo;&	;iµ;	@;'"timing_function;"timing-functiono;&	;iµ;	@;'"
delay;"
delay:
@listo;&	;i¢;	@;'"transitions;"transitionsu;!Ý[o:Sass::Script::Variable	:
@linei¸:@options{ :@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode;i¸:@prop_syntax:new;@:
@tabsi :@children[ ;	["-webkit-transition:@valueo; 	;i¸;@;"webkit_value;	"webkit-valueo:Sass::Tree::CommentNode
;i¹;@:
@type:silent;[ ;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:@options{ :@underscored_name"has_delays:
@name"has-delays0[o:Sass::Tree::PropNode;iº:@prop_syntax:new;@:
@tabsi :@children[ ;	["-webkit-transition-delay:@valueo; 	;iº;@;"delays;	"delaysu;!#[o:Sass::Script::Variable	:
@linei»:@options{ :@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode;i»:@prop_syntax:new;@:
@tabsi :@children[ ;	["-moz-transition:@valueo; 	;i»;@;"moz_value;	"moz-valueu;![o:Sass::Script::Variable	:
@linei¼:@options{ :@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode;i¼:@prop_syntax:new;@:
@tabsi :@children[ ;	["-o-transition:@valueo; 	;i¼;@;"o_value;	"o-valueo;(;i½;);*;	@;+i ;
[ ;["transition;o;&	;i½;	@;'"transitions;"transitions;#0;"transition;%[[o;&;	@;'"transition_1;"transition-1o;	;i;	@;;;"default[o;&;	@;'"transition_2;"transition-2o;;i;	@;F[o;&;	@;'"transition_3;"transition-3o;;i;	@;F[o;&;	@;'"transition_4;"transition-4o;;i;	@;F[o;&;	@;'"transition_5;"transition-5o;;i;	@;F[o;&;	@;'"transition_6;"transition-6o;;i;	@;F[o;&;	@;'"transition_7;"transition-7o;;i;	@;F[o;&;	@;'"transition_8;"transition-8o;;i;	@;F[o;&;	@;'"transition_9;"transition-9o;;i;	@;F[o;&;	@;'"transition_10;"transition-10o;;i;	@;Fo;
;iÀ;	@;;;
[ ;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */o:Sass::Tree::FunctionNode;T;iÁ;	@;
[o:Sass::Tree::ReturnNode	;iÂ;	@;
[ ;o;";iÂ;	@;#0;"	join;${ ;%[o;	;;1;iÂ;	@;[ o;&	;iÂ;	@;'"	list;"	listo;	;iÂ;	@;;;"
comma;#0;"comma-list;%[[o;&;	@;'"	list;"	listo;	;;1;iÁ;	@;[ o;
;iÅ;	@;;;
[ ;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */o;5;T;iÆ;	@;
[u;!®[o:Sass::Script::Operation
:@operator:eq:
@lineiÇ:@operand1o:Sass::Script::Funcall;iÇ:@options{ :@splat0:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;iÇ;@:@underscored_name"property;"property;@:@operand2o:Sass::Script::String	;iÇ;@:
@type:identifier:@value"	listu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@lineiÎ:@options{ :@splat0:
@name"
index:@keywords{ :
@args[o:Sass::Script::Variable	;iÎ;@:@underscored_name"#transitionable_prefixed_values;	"#transitionable-prefixed-valueso;	;iÎ;@;"property;	"propertyu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:@options{ :@children[ :
@expro:Sass::Script::Variable	;iÑ;@:@underscored_name"property:
@name"property[o:Sass::Tree::ReturnNode	;iÏ;@:@children[ :
@expro: Sass::Script::Interpolation:	@mido;	;iÏ;@;"prefix;	"prefix;iÏ:@whitespace_after0;@:@before0:@whitespace_beforei:@aftero;;o;	;iÏ;@;"property;	"property;iÏ;0;@;o;;o:Sass::Script::String	;iÏ;@:
@type:identifier:@value"-;iÏ;F;@;0;0;0:@originally_text:originally_text;0;0;F;F[o:Sass::Tree::VariableNode;iÈ;@:@children[ ;"new-list:@guarded0:
@expro;
;iÈ;@;0;"comma-list;{ ;[ o:Sass::Tree::EachNode:@has_childrenT;iÉ;@:	@var"v;[o;;iÊ;@;[ ;"new-list;0;o;
;iÊ;@;0;"append;{ ;[o;	;iÊ;@;"new_list;"new-listo;
;iÊ;@;0;"prefixed-for-transition;{ ;[o;	;iÊ;@;"prefix;"prefixo;	;iÊ;@;"v;"v:
@listo;	;iÉ;@;"property;"propertyo:Sass::Tree::ReturnNode	;iÌ;@;[ ;o;	;iÌ;@;"new_list;"new-list;#0;"prefixed-for-transition;%[[o;&;	@;'"prefix;"prefix0[o;&;	@;'"property;"property0o;
;iÖ;	@;;;
[ ;["7/* Checks if the value given is a unit of time. */o;5;T;i×;	@;
[u;![o:Sass::Script::Operation
:@operator:eq:
@lineiØ:@operand1o:Sass::Script::Funcall;iØ:@options{ :@splat0:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;iØ;@:@underscored_name"
value;"
value;@:@operand2o:Sass::Script::String	;iØ;@:
@type:identifier:@value"numberu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:@options{ :@children[ :
@expro:Sass::Script::Bool;iÛ;@:@valueF[o:Sass::Tree::ReturnNode	;iÙ;@:@children[ :
@expro:!Sass::Script::UnaryOperation	;:not;iÙ;@:@operando;	;;;iÙ;@;o;
;iÙ;@;0;"
index;{ ;[o:Sass::Script::List	:@separator:
space;iÙ;@;[o;	;iÙ;@;;;"so;	;iÙ;@;;;"mso;
;iÙ;@;0;"	unit;{ ;[o;	;iÙ;@;"
value;"
value;#0;"is-time;%[[o;&;	@;'"
value;"
value0